// Date: 21/12/2012 14:27:16
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package scythemod.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelAngel extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer Body;
    ModelRenderer Neck;
    ModelRenderer FloatSquare;
    ModelRenderer Shoulderleft;
    ModelRenderer Shoulderright;
    ModelRenderer ArmLeft1;
    ModelRenderer Elbow;
    ModelRenderer Hand;
    ModelRenderer ArmLeft2;
    ModelRenderer ArmRight1;
    ModelRenderer ElbowRight;
    ModelRenderer RightArm2;
    ModelRenderer RightHand;
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
  
  public ModelAngel()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Head = new ModelRenderer(this, 32, 16);
      Head.addBox(0F, 0F, 0F, 8, 8, 8);
      Head.setRotationPoint(-4F, -15F, -13F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0.7679449F, 0F, 0F);
      Body = new ModelRenderer(this, 0, 8);
      Body.addBox(0F, 0F, 0F, 8, 18, 6);
      Body.setRotationPoint(-4F, -15F, -2F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0.3490659F, 0F, 0F);
      Neck = new ModelRenderer(this, 48, 0);
      Neck.addBox(0F, 0F, 0F, 4, 7, 4);
      Neck.setRotationPoint(-2F, -16F, -7F);
      Neck.setTextureSize(64, 32);
      Neck.mirror = true;
      setRotation(Neck, 1.047198F, 0F, 0F);
      FloatSquare = new ModelRenderer(this, 0, 0);
      FloatSquare.addBox(0F, 0F, 0F, 4, 4, 4);
      FloatSquare.setRotationPoint(-2F, -0.5F, 5.5F);
      FloatSquare.setTextureSize(64, 32);
      FloatSquare.mirror = true;
      setRotation(FloatSquare, -0.122173F, 0F, 0F);
      Shoulderleft = new ModelRenderer(this, 17, 0);
      Shoulderleft.addBox(0F, 0F, 0F, 2, 2, 2);
      Shoulderleft.setRotationPoint(4F, -14F, 1.5F);
      Shoulderleft.setTextureSize(64, 32);
      Shoulderleft.mirror = true;
      setRotation(Shoulderleft, 0F, 0F, 0F);
      Shoulderright = new ModelRenderer(this, 17, 0);
      Shoulderright.addBox(0F, 0F, 0F, 2, 2, 2);
      Shoulderright.setRotationPoint(-6F, -14F, 1.5F);
      Shoulderright.setTextureSize(64, 32);
      Shoulderright.mirror = true;
      setRotation(Shoulderright, 0F, 0F, 0F);
      ArmLeft1 = new ModelRenderer(this, 32, 0);
      ArmLeft1.addBox(0F, 0F, 0F, 1, 10, 1);
      ArmLeft1.setRotationPoint(5F, -13.5F, 2F);
      ArmLeft1.setTextureSize(64, 32);
      ArmLeft1.mirror = true;
      setRotation(ArmLeft1, 0F, 0F, -0.4363323F);
      Elbow = new ModelRenderer(this, 17, 4);
      Elbow.addBox(0F, 0F, 0F, 2, 2, 2);
      Elbow.setRotationPoint(8.3F, -6F, 1.5F);
      Elbow.setTextureSize(64, 32);
      Elbow.mirror = true;
      setRotation(Elbow, 0F, 0F, 0F);
      Hand = new ModelRenderer(this, 37, 0);
      Hand.addBox(0F, 0F, 0F, 2, 3, 2);
      Hand.setRotationPoint(8.5F, 9F, 2F);
      Hand.setTextureSize(64, 32);
      Hand.mirror = true;
      setRotation(Hand, 0.3839724F, 0F, 0F);
      ArmLeft2 = new ModelRenderer(this, 28, 0);
      ArmLeft2.addBox(0F, 0F, 0F, 1, 13, 1);
      ArmLeft2.setRotationPoint(9F, -4F, 2F);
      ArmLeft2.setTextureSize(64, 32);
      ArmLeft2.mirror = true;
      setRotation(ArmLeft2, 0F, 0F, 0F);
      ArmRight1 = new ModelRenderer(this, 32, 0);
      ArmRight1.addBox(0F, 0F, 0F, 1, 10, 1);
      ArmRight1.setRotationPoint(-6F, -14F, 2F);
      ArmRight1.setTextureSize(64, 32);
      ArmRight1.mirror = true;
      setRotation(ArmRight1, 0F, 0F, 0.4363323F);
      ElbowRight = new ModelRenderer(this, 17, 4);
      ElbowRight.addBox(0F, 0F, 0F, 2, 2, 2);
      ElbowRight.setRotationPoint(-10.3F, -6F, 1.5F);
      ElbowRight.setTextureSize(64, 32);
      ElbowRight.mirror = true;
      setRotation(ElbowRight, 0F, 0F, 0F);
      RightArm2 = new ModelRenderer(this, 28, 0);
      RightArm2.addBox(0F, 0F, 0F, 1, 13, 1);
      RightArm2.setRotationPoint(-10F, -4F, 2F);
      RightArm2.setTextureSize(64, 32);
      RightArm2.mirror = true;
      setRotation(RightArm2, 0F, 0F, 0F);
      RightHand = new ModelRenderer(this, 37, 0);
      RightHand.addBox(0F, 0F, 0F, 2, 3, 2);
      RightHand.setRotationPoint(-10.5F, 9F, 2F);
      RightHand.setTextureSize(64, 32);
      RightHand.mirror = true;
      setRotation(RightHand, 0.3839724F, 0F, 0F);
      Shape1 = new ModelRenderer(this, 30, 9);
      Shape1.addBox(-3F, 0F, -3F, 6, 1, 6);
      Shape1.setRotationPoint(0F, 3F, 7F);
      Shape1.setTextureSize(64, 32);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, 0F);
      Shape2 = new ModelRenderer(this, 34, 11);
      Shape2.addBox(-2F, 0F, -2F, 4, 1, 4);
      Shape2.setRotationPoint(0F, 9F, 7F);
      Shape2.setTextureSize(64, 32);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, 0F, 0F);
      Shape3 = new ModelRenderer(this, 38, 13);
      Shape3.addBox(-1F, 0F, -1F, 2, 1, 2);
      Shape3.setRotationPoint(0F, 14F, 7F);
      Shape3.setTextureSize(64, 32);
      Shape3.mirror = true;
      setRotation(Shape3, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Head.render(f5);
    Body.render(f5);
    Neck.render(f5);
    FloatSquare.render(f5);
    Shoulderleft.render(f5);
    Shoulderright.render(f5);
    ArmLeft1.render(f5);
    Elbow.render(f5);
    Hand.render(f5);
    ArmLeft2.render(f5);
    ArmRight1.render(f5);
    ElbowRight.render(f5);
    RightArm2.render(f5);
    RightHand.render(f5);
    Shape1.render(f5);
    Shape2.render(f5);
    Shape3.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    this.Shape1.rotationPointY = (MathHelper.sin(f2*0.3F)*6F)+7;
    this.Shape2.rotationPointY = (MathHelper.sin(f2*0.2F)*6F)+7;
    this.Shape3.rotationPointY = (MathHelper.sin(f2*0.4F)*6F)+7;

  }

}
